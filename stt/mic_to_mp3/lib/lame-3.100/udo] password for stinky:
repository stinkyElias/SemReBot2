lame(1)                                  LAME audio compressor                                 lame(1)

NNAAMMEE
       lame - create mp3 audio files

SSYYNNOOPPSSIISS
       lame [options] <infile> <outfile>

DDEESSCCRRIIPPTTIIOONN
       LAME  is  a program which can be used to create compressed audio files.  (Lame ain't an MP3 en‐
       coder).  These audio files can be played back by popular MP3 players such as mpg123 or madplay.
       To read from stdin, use "-" for <infile>.  To write to stdout, use "-" for <outfile>.

OOPPTTIIOONNSS
       Input options:

       --rr     Assume  the input file is raw pcm.  Sampling rate and mono/stereo/jstereo must be speci‐
              fied on the command line.  For each stereo sample, LAME expects the input data to be or‐
              dered left channel first, then right channel. By default, LAME expects them to be signed
              integers with a bitwidth of 16 and stored in little-endian.  Without --rr,, LAME will  per‐
              form several _f_s_e_e_k_(_)_'_s on the input file looking for WAV and AIFF headers.
              Might not be available on your release.

       --xx     Swap bytes in the input file (or output file when using ----ddeeccooddee))..
              For  sorting  out little endian/big endian type problems.  If your encodings sounds like
              static, try this first.
              Without using --xx,, LAME will treat input file as native endian.

       --ss _s_f_r_e_q
              _s_f_r_e_q = 8/11.025/12/16/22.05/24/32/44.1/48

              Required only for raw PCM input files.  Otherwise it will be determined from the  header
              of the input file.

              LAME  will automatically resample the input file to one of the supported MP3 samplerates
              if necessary.

       ----bbiittwwiiddtthh _n
              Input bit width per sample.
              _n = 8, 16, 24, 32 (default 16)

              Required only for raw PCM input files.  Otherwise it will be determined from the  header
              of the input file.

       ----ssiiggnneedd
              Instructs LAME that the samples from the input are signed (the default for 16, 24 and 32
              bits raw pcm data).

              Required only for raw PCM input files.

       ----uunnssiiggnneedd
              Instructs LAME that the samples from the input are unsigned (the default for 8 bits  raw
              pcm data, where 0x80 is zero).

              Required only for raw PCM input files and only available at bitwidth 8.

       ----lliittttllee--eennddiiaann
              Instructs LAME that the samples from the input are in little-endian form.

              Required only for raw PCM input files.

       ----bbiigg--eennddiiaann
              Instructs LAME that the samples from the input are in big-endian form.

              Required only for raw PCM input files.

       ----mmpp11iinnppuutt
              Assume the input file is a MPEG Layer I (ie MP1) file.
              If the filename ends in ".mp1" LAME will assume it is a MPEG Layer I file.  For stdin or
              Layer I files which do not end in .mp1 you need to use this switch.

       ----mmpp22iinnppuutt
              Assume the input file is a MPEG Layer II (ie MP2) file.
              If the filename ends in ".mp2" LAME will assume it is a MPEG Layer II file.   For  stdin
              or Layer II files which do not end in .mp2 you need to use this switch.

       ----mmpp33iinnppuutt
              Assume the input file is a MP3 file.
              Useful  for  downsampling  from one mp3 to another.  As an example, it can be useful for
              streaming through an IceCast server.
              If the filename ends in ".mp3" LAME will assume it is an MP3.  For stdin  or  MP3  files
              which do not end in .mp3 you need to use this switch.

       ----nnooggaapp _f_i_l_e_1 _f_i_l_e_2 _._._.
              gapless encoding for a set of contiguous files

       ----nnooggaappoouutt _d_i_r
              output dir for gapless encoding (must precede --nogap)

       ----oouutt--ddiirr _d_i_r
              If  no explicit output file is specified, a file will be written at given path.  Ignored
              when using piped/streamed input

       Operational options:

       --mm _m_o_d_e
              _m_o_d_e = s, j, f, d, m, l, r

              Joint-stereo is the default mode for stereo files.

              ((ss))iimmppllee sstteerreeoo ((FFoorrcceedd LLRR))
              In this mode, the encoder makes no use of potentially existing correlations between  the
              two  input  channels.   It  can, however, negotiate the bit demand between both channel,
              i.e. give one channel more bits if the other contains silence or needs less bits because
              of a lower complexity.

              ((jj))ooiinntt sstteerreeoo
              In  this  mode,  the  encoder  can  use (on a frame by frame basis) either L/R stereo or
              mid/side stereo.  In mid/side stereo, the mid (L+R) and side (L-R) channels are encoded,
              and  more bits are allocated to the mid channel than the side channel.  When there isn't
              too much stereo separation, this effectively increases the bandwidth, so  having  higher
              quality with the same amount of bits.

              Using  mid/side stereo inappropriately can result in audible compression artifacts.  Too
              much switching between mid/side and regular stereo can also  sound  bad.   To  determine
              when  to  switch  to mid/side stereo, LAME uses a much more sophisticated algorithm than
              the one described in the ISO documentation.

              ((ff))oorrcceedd MMSS sstteerreeoo
              Forces all frames to be encoded with mid/side stereo. It should be used only if you  are
              sure that every frame of the input file has very little stereo separation.

              ((dd))uuaall cchhaannnneell
              In  this  mode, the 2 channels will be totally independently encoded.  Each channel will
              have exactly half of the bitrate.  This mode is designed for applications like dual lan‐
              guages  encoding  (for  example: English in one channel and French in the other).  Using
              this encoding mode for regular stereo files will result in a lower quality encoding.

              ((mm))oonnoo
              The input will be encoded as a mono signal.  If it was a stereo signal, it will be down‐
              sampled  to  mono.   The downmix is calculated as the sum of the left and right channel,
              attenuated by 6 dB.  Also note that, if using a stereo RAW PCM stream, you need  to  use
              the -a parameter.

              ((ll))eefftt cchhaannnneell oonnllyy
              The input will be encoded as a mono signal.  If it was a stereo signal, the left channel
              will be encoded only.

              ((rr))iigghhtt cchhaannnneell oonnllyy
              The input will be encoded as a mono signal.  If it was a stereo signal, the right  chan‐
              nel will be encoded only.

       --aa     Mix the stereo input file to mono and encode as mono.
              The downmix is calculated as the sum of the left and right channel, attenuated by 6 dB.

              This  option is only needed in the case of raw PCM stereo input (because LAME cannot de‐
              termine the number of channels in the input file).  To encode a  stereo  RAW  PCM  input
              file as mono, use llaammee --aa --mm mm

              For  WAV and AIFF input files, using --mm mm will always produce a mono .mp3 file from both
              mono and stereo input.

       ----ffrreeeeffoorrmmaatt
              Produces a free format bitstream.  With this option, you can use  --bb  with  any  bitrate
              higher than 8 kbps.

              However,  even if an mp3 decoder is required to support free bitrates at least up to 320
              kbps, many players are unable to deal with it.

              Tests have shown that the following decoders support free format:
              iinn__mmppgg112233 up to 560 kbps
              ll33ddeecc up to 310 kbps
              LLAAMMEE up to 640 kbps
              MMAADD up to 640 kbps

       ----ddeeccooddee
              Uses LAME for decoding to a wav file.  The input file can be any input type supported by
              encoding,  including layer II files.  LAME uses a fork of mpglib known as HIP for decod‐
              ing.

              If --tt is used (disable wav header), LAME will output raw pcm in  native  endian  format.
              You can use --xx to swap bytes order.

              This  option  is  not  usable if the MP3 decoder was eexxpplliicciittllyy disabled in the build of
              LAME.

       --tt     Disable writing of the INFO Tag on encoding.
              This tag is embedded in frame 0 of the MP3 file.  It includes some information about the
              encoding  options  of  the file, and in VBR it lets VBR aware players correctly seek and
              compute playing times of VBR files.

              When ----ddeeccooddee is specified (decode to WAV), this flag will disable writing  of  the  WAV
              header.  The output will be raw pcm, native endian format.  Use --xx to swap bytes.

       ----ccoommpp _a_r_g
              Instead  of  choosing  bitrate,  using this option, user can choose compression ratio to
              achieve.

       ----ssccaallee _n
       ----ssccaallee--ll _n
       ----ssccaallee--rr _n
              Scales input (every channel, only left channel or only right channel) by _n_.   This  just
              multiplies the PCM data (after it has been converted to floating point) by _n_.

              _n > 1: increase volume
              _n = 1: no effect
              _n < 1: reduce volume

              Use  with  care,  since  most  MP3  decoders  will truncate data which decodes to values
              greater than 32768.

       ----rreeppllaayyggaaiinn--ffaasstt
              Compute ReplayGain fast but slightly inaccurately.

              This computes "Radio" ReplayGain on the input data stream after  user‐specified  volume‐
              scaling and/or resampling.

              The  ReplayGain analysis does _n_o_t affect the content of a compressed data stream itself,
              it is a value stored in the header of a sound file.  Information on the purpose  of  Re‐
              playGain and the algorithms used is available from hhttttpp::////wwwwww..rreeppllaayyggaaiinn..oorrgg//..

              Only  the  "RadioGain"  Replaygain value is computed, it is stored in the LAME tag.  The
              analysis is performed with the reference volume equal to 89dB.  Note: the reference vol‐
              ume has been changed from 83dB on transition from version 3.95 to 3.95.1.

              This switch is enabled by default.

              See also: ----rreeppllaayyggaaiinn--aaccccuurraattee,, ----nnoorreeppllaayyggaaiinn

       ----rreeppllaayyggaaiinn--aaccccuurraattee
              Compute ReplayGain more accurately and find the peak sample.

              This  computes  "Radio"  ReplayGain on the decoded data stream, finds the peak sample by
              decoding on the fly the encoded data stream and stores it in the file.

              The ReplayGain analysis does _n_o_t affect the content of a compressed data stream  itself,
              it  is  a value stored in the header of a sound file.  Information on the purpose of Re‐
              playGain and the algorithms used is available from hhttttpp::////wwwwww..rreeppllaayyggaaiinn..oorrgg//..

              By default, LAME performs ReplayGain analysis on the input data (after  the  user‐speci‐
              fied  volume scaling).  This behavior might give slightly inaccurate results because the
              data on the output of a lossy compression/decompression sequence differs from  the  ini‐
              tial input data.  When ----rreeppllaayyggaaiinn--aaccccuurraattee is specified the mp3 stream gets decoded on
              the fly and the analysis is performed on the decoded data  stream.   Although  theoreti‐
              cally this method gives more accurate results, it has several disadvantages:

               *   tests  have shown that the difference between the ReplayGain values computed on the
                   input data and decoded data is usually not greater than 0.5dB, although the minimum
                   volume difference the human ear can perceive is about 1.0dB

               *   decoding on the fly significantly slows down the encoding process

              The apparent advantage is that:

               *   with  ----rreeppllaayyggaaiinn--aaccccuurraattee  the  real  peak sample is determined and stored in the
                   file.  The knowledge of the peak sample can be useful to decoders (players) to pre‐
                   vent a negative effect called 'clipping' that introduces distortion into the sound.

              Only  the  "RadioGain"  ReplayGain value is computed, it is stored in the LAME tag.  The
              analysis is performed with the reference volume equal to 89dB.  Note: the reference vol‐
              ume has been changed from 83dB on transition from version 3.95 to 3.95.1.

              This  option  is  not  usable if the MP3 decoder was eexxpplliicciittllyy disabled in the build of
              LAME.  (Note: if LAME is compiled without the MP3 decoder, ReplayGain analysis  is  per‐
              formed on the input data after user-specified volume scaling).

              See also: ----rreeppllaayyggaaiinn--ffaasstt,, ----nnoorreeppllaayyggaaiinn ----cclliippddeetteecctt

       ----nnoorreeppllaayyggaaiinn
              Disable ReplayGain analysis.

              By default ReplayGain analysis is enabled. This switch disables it.

              See also: ----rreeppllaayyggaaiinn--ffaasstt,, ----rreeppllaayyggaaiinn--aaccccuurraattee

       ----cclliippddeetteecctt
              Clipping detection.

              Enable  ----rreeppllaayyggaaiinn--aaccccuurraattee and print a message whether clipping occurs and how far in
              dB the waveform is from full scale.

              This option is not usable if the MP3 decoder was eexxpplliicciittllyy disabled  in  the  build  of
              LAME.

              See also: ----rreeppllaayyggaaiinn--aaccccuurraattee

       ----pprreesseett  ttyyppee || [[ccbbrr]] kkbbppss
              Use one of the built-in presets.

              Have a look at the PRESETS section below.

              ----pprreesseett hheellpp gives more infos about the the used options in these presets.

       ----nnooaassmm  ttyyppee
              Disable  specific  assembly  optimizations  ( mmmmxx / 33ddnnooww / ssssee ).  Quality will not in‐
              crease, only speed will be reduced.  If you have problems running Lame  on  a  Cyrix/Via
              processor, disabling mmx optimizations might solve your problem.

       Verbosity:

       ----ddiissppttiimmee _n
              Set the delay in seconds between two display updates.

       ----nnoohhiisstt
              By  default,  LAME will display a bitrate histogram while producing VBR mp3 files.  This
              will disable that feature.
              Histogram display might not be available on your release.

       --SS
       ----ssiilleenntt
       ----qquuiieett
              Do not print anything on the screen.

       ----vveerrbboossee
              Print a lot of information on the screen.

       ----hheellpp Display a list of available options.

       Noise shaping & psycho acoustic algorithms:

       --qq _q_u_a_l
              0 <= _q_u_a_l <= 9

              Bitrate is of course the main influence on quality.  The higher the bitrate, the  higher
              the  quality.   But for a given bitrate, we have a choice of algorithms to determine the
              best scalefactors and Huffman encoding (noise shaping).

              For CBR and ABR, the following table applies:

              --qq 00::
              Use the best algorithms (Best Huffman coding search, full outer loop,  and  the  highest
              precision of several parameters).

              --qq 11 ttoo qq 44::
              Similar  to  -q 0 without the full outer loop and decreasing precision of parameters the
              further from q0. -q 3 is the default.

              --qq 55 aanndd --qq 66::
              Same as -q 7, but enables noise shaping and increases subblock gain

              --qq 77 ttoo --qq 99::
              Same as -f. Very fast, OK quality. Psychoacoustics are used for  pre-echo  and  mid/side
              stereo, but no noise-shaping is done.

              For the default VBR mode since LAME 3.98, the following table applies :

              --qq 00 ttoo --qq 44::
              include all features of the other modes and additionally use the best search when apply‐
              ing Huffman coding.

              --qq 55 aanndd --qq 66::
              include all features of -q7, calculate and consider actual quantisation noise, and addi‐
              tionally enable subblock gain.

              --qq 77 ttoo --qq 99
              This  level  uses a psymodel but does not calculate quantisation noise when encoding: it
              takes a quick guess.

       --hh     Alias of --qq 22

       --ff     Alias of --qq 77

       CBR (constant bitrate, the default) options:

       --bb _n   For MPEG-1 (sampling frequencies of 32, 44.1 and 48 kHz)
              _n = 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320

              For MPEG-2 (sampling frequencies of 16, 22.05 and 24 kHz)
              _n = 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160

              For MPEG-2.5 (sampling frequencies of 8, 11.025 and 12 kHz)
              _n = 8, 16, 24, 32, 40, 48, 56, 64

              Default is 128 for MPEG1 and 64 for MPEG2 and 32 for MPEG2.5
               (64, 32 and 16 respectively in case of mono).

       ----ccbbrr  enforce use of constant bitrate. Used to disable VBR or ABR encoding even if their  set‐
              tings are enabled.

       ABR (average bitrate) options:

       ----aabbrr _n
              Turns  on encoding with a targeted average bitrate of n kbits, allowing to use frames of
              different sizes.  The allowed range of _n is 8 - 310,  you  can  use  any  integer  value
              within that range.

              It  can  be combined with the --bb and --BB switches like: llaammee ----aabbrr _1_2_3 --bb _6_4 --BB _1_9_2 _a_._w_a_v
              _a_._m_p_3 which would limit the allowed frame sizes between 64 and 192 kbits.

              The use of --BB is NOT RECOMMENDED.  A 128 kbps CBR bitstream, because of the  bit  reser‐
              voir,  can  actually  have frames which use as many bits as a 320 kbps frame.  VBR modes
              minimize the use of the bit reservoir, and thus need to allow 320 kbps frames to get the
              same flexibility as CBR streams.

       VBR (variable bitrate) options:

       --vv     use variable bitrate ((----vvbbrr--nneeww))

       ----vvbbrr--oolldd
              Invokes  the  oldest,  most  tested VBR algorithm.  It produces very good quality files,
              though is not very fast.  This has, up through v3.89, been  considered  the  "workhorse"
              VBR algorithm.

       ----vvbbrr--nneeww
              Invokes  the newest VBR algorithm.  During the development of version 3.90, considerable
              tuning was done on this algorithm, and it is now considered to be on par with the origi‐
              nal  ----vvbbrr--oolldd..   It  has  the added advantage of being very fast (over twice as fast as
              ----vvbbrr--oolldd ). This is the default since 3.98.

       --VV _n   0 <= _n <= 9.999
              Enable VBR (Variable BitRate) and specifies the value of VBR quality (default = 4). Dec‐
              imal values can be specified, like 4.51.
              0 = highest quality.

       ABR and VBR options:

       --bb _b_i_t_r_a_t_e
              For MPEG-1 (sampling frequencies of 32, 44.1 and 48 kHz)
              _n = 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320

              For MPEG-2 (sampling frequencies of 16, 22.05 and 24 kHz)
              _n = 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160

              For MPEG-2.5 (sampling frequencies of 8, 11.025 and 12 kHz)
              _n = 8, 16, 24, 32, 40, 48, 56, 64

              Specifies  the minimum bitrate to be used.  However, in order to avoid wasted space, the
              smallest frame size available will be used during silences.

       --BB _b_i_t_r_a_t_e
              For MPEG-1 (sampling frequencies of 32, 44.1 and 48 kHz)
              _n = 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320

              For MPEG-2 (sampling frequencies of 16, 22.05 and 24 kHz)
              _n = 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160

              For MPEG-2.5 (sampling frequencies of 8, 11.025 and 12 kHz)
              _n = 8, 16, 24, 32, 40, 48, 56, 64

              Specifies the maximum allowed bitrate.

              Note: If you own an mp3 hardware player build upon a MAS 3503 chip, you must set maximum
              bitrate to no more than 224 kpbs.

       --FF     Strictly enforce the --bb option.
              This is mainly for use with hardware players that do not support low bitrate mp3.

              Without this option, the minimum bitrate will be ignored for passages of analog silence,
              i.e. when the music level is below the absolute threshold of human hearing (ATH).

       Experimental options:

       --XX _n   0 <= _n <= 7

              When LAME searches for a "good" quantization, it has to compare the actual one with  the
              best  one found so far.  The comparison says which one is better, the best so far or the
              actual.  The --XX parameter selects between different approaches to  make  this  decision,
              --XX00 being the default mode:

              --XX00
              The criteria are (in order of importance):
              * less distorted scalefactor bands
              * the sum of noise over the thresholds is lower
              * the total noise is lower

              --XX11
              The  actual  is  better if the maximum noise over all scalefactor bands is less than the
              best so far.

              --XX22
              The actual is better if the total sum of noise is lower than the best so far.

              --XX33
              The actual is better if the total sum of noise is lower than the best  so  far  and  the
              maximum noise over all scalefactor bands is less than the best so far plus 2dB.

              --XX44
              Not yet documented.

              --XX55
              The criteria are (in order of importance):
              * the sum of noise over the thresholds is lower
              * the total sum of noise is lower

              --XX66
              The criteria are (in order of importance):
              * the sum of noise over the thresholds is lower
              * the maximum noise over all scalefactor bands is lower
              * the total sum of noise is lower

              --XX77
              The criteria are:
              * less distorted scalefactor bands
              or
              * the sum of noise over the thresholds is lower

       --YY     lets LAME ignore noise in sfb21, like in CBR

       MP3 header/stream options:

       --ee _e_m_p _e_m_p = n, 5, c

              n = (none, default)
              5 = 0/15 microseconds
              c = citt j.17

              All this does is set a flag in the bitstream.  If you have a PCM input file where one of
              the above types of (obsolete) emphasis has been applied, you can set this flag in  LAME.
              Then  the  mp3 decoder should de-emphasize the output during playback, although most de‐
              coders ignore this flag.

              A better solution would be to apply the de-emphasis with a standalone utility before en‐
              coding, and then encode without --ee..

       --cc     Mark the encoded file as being copyrighted.

       --oo     Mark the encoded file as being a copy.

       --pp     Turn on CRC error protection.
              It  will  add  a  cyclic  redundancy  check (CRC) code in each frame, allowing to detect
              transmission errors that could occur on the MP3 stream.  However, it takes 16  bits  per
              frame that would otherwise be used for encoding, and then will slightly reduce the sound
              quality.

       ----nnoorreess
              Disable the bit reservoir.  Each frame will then become independent from previous  ones,
              but the quality will be lower.

       ----ssttrriiccttllyy--eennffoorrccee--IISSOO
              With this option, LAME will enforce the 7680 bit limitation on total frame size.
              This  results  in many wasted bits for high bitrate encodings but will ensure strict ISO
              compatibility.  This compatibility might be important for hardware players.

       Filter options:

       ----lloowwppaassss _f_r_e_q
              Set a lowpass filtering frequency in kHz.  Frequencies above the specified one  will  be
              cutoff.

       ----lloowwppaassss--wwiiddtthh _f_r_e_q
              Set the width of the lowpass filter.  The default value is 15% of the lowpass frequency.

       ----hhiigghhppaassss _f_r_e_q
              Set an highpass filtering frequency in kHz.  Frequencies below the specified one will be
              cutoff.

       ----hhiigghhppaassss--wwiiddtthh _f_r_e_q
              Set the width of the highpass filter in kHz.  The default value is 15% of  the  highpass
              frequency.

       ----rreessaammppllee _s_f_r_e_q
              _s_f_r_e_q = 8, 11.025, 12, 16, 22.05, 24, 32, 44.1, 48
              Select output sampling frequency (only supported for encoding).
              If not specified, LAME will automatically resample the input when using high compression
              ratios.

       ID3 tag options:

       ----tttt _t_i_t_l_e
              audio/song title (max 30 chars for version 1 tag)

       ----ttaa _a_r_t_i_s_t
              audio/song artist (max 30 chars for version 1 tag)

       ----ttll _a_l_b_u_m
              audio/song album (max 30 chars for version 1 tag)

       ----ttyy _y_e_a_r
              audio/song year of issue (1 to 9999)

       ----ttcc _c_o_m_m_e_n_t
              user-defined text (max 30 chars for v1 tag, 28 for v1.1)

       ----ttnn _t_r_a_c_k_[_/_t_o_t_a_l_]
              audio/song track number and (optionally) the total number  of  tracks  on  the  original
              recording.  (track and total each 1 to 255. Providing just the track number creates v1.1
              tag, providing a total forces v2.0).

       ----ttgg _g_e_n_r_e
              audio/song genre (name or number in list)

       ----ttvv _i_d_=_v_a_l_u_e
              Text or URL frame specified by id and value (v2.3 tag). User defined frame. Syntax: --tv
              "TXXX=description=content"

       ----aadddd--iidd33vv22
              force addition of version 2 tag

       ----iidd33vv11--oonnllyy
              add only a version 1 tag

       ----iidd33vv22--oonnllyy
              add only a version 2 tag

       ----iidd33vv22--llaattiinn11
              add following options in ISO-8859-1 text encoding.

       ----iidd33vv22--uuttff1166
              add following options in unicode text encoding.

       ----ssppaaccee--iidd33vv11
              pad version 1 tag with spaces instead of nulls

       ----ppaadd--iidd33vv22
              same as --pad-id3v2-size 128

       ----ppaadd--iidd33vv22--ssiizzee nnuumm
              adds version 2 tag, pad with extra "num" bytes

       ----ggeennrree--lliisstt
              print alphabetically sorted ID3 genre list and exit

       ----iiggnnoorree--ttaagg--eerrrroorrss
              ignore errors in values passed for tags, use defaults in case an error occurs

       Analysis options:

       --gg     run graphical analysis on <infile>.  <infile> can also be a .mp3 file.  (This feature is
              a compile time option.  Your binary may for speed reasons be compiled without this.)

IIDD33 TTAAGGSS
       LAME is able to embed ID3 v1, v1.1 or v2 tags inside the encoded MP3 file.  This allows to have
       some useful information about the music track included inside the file.  Those data can be read
       by most MP3 players.

       Lame will smartly choose which tags to use.  It will add ID3 v2 tags only if the input comments
       won't  fit in v1 or v1.1 tags, i.e. if they are more than 30 characters.  In this case, both v1
       and v2 tags will be added, to ensure reading of tags by MP3 players which are  unable  to  read
       ID3 v2 tags.

EENNCCOODDIINNGG MMOODDEESS
       LAME  is  able  to encode your music using one of its 3 encoding modes: constant bitrate (CBR),
       average bitrate (ABR) and variable bitrate (VBR).

       CCoonnssttaanntt BBiittrraattee ((CCBBRR))
              This is the default encoding mode, and also the most basic.  In this mode,  the  bitrate
              will  be  the same for the whole file.  It means that each part of your mp3 file will be
              using the same number of bits.  The musical passage being a difficult one to  encode  or
              an  easy one, the encoder will use the same bitrate, so the quality of your mp3 is vari‐
              able.  Complex parts will be of a lower quality than the easiest ones.  The main  advan‐
              tage is that the final files size won't change and can be accurately predicted.

       AAvveerraaggee BBiittrraattee ((AABBRR))
              In this mode, you choose the encoder will maintain an average bitrate while using higher
              bitrates for the parts of your music that need more bits.  The result will be of  higher
              quality  than  CBR  encoding  but the average file size will remain predictable, so this
              mode is highly recommended over CBR.  This encoding mode is similar to what is  referred
              as vbr in AAC or Liquid Audio (2 other compression technologies).

       VVaarriiaabbllee bbiittrraattee ((VVBBRR))
              In  this  mode, you choose the desired quality on a scale from 9 (lowest quality/biggest
              distortion) to 0 (highest quality/lowest distortion).  Then encoder  tries  to  maintain
              the  given quality in the whole file by choosing the optimal number of bits to spend for
              each part of your music.  The main advantage is that you are able to specify the quality
              level  that  you  want to reach, but the inconvenient is that the final file size is to‐
              tally unpredictable.

PPRREESSEETTSS
       The ----pprreesseett switches are aliases over LAME settings.

       To activate these presets:

       For VBR modes (generally highest quality):

       ----pprreesseett mmeeddiiuumm
              This preset should provide near transparency to most people on most music.

       ----pprreesseett ssttaannddaarrdd
              This preset should generally be transparent to most people on most music and is  already
              quite high in quality.

       ----pprreesseett eexxttrreemmee
              If  you  have  extremely  good hearing and similar equipment, this preset will generally
              provide slightly higher quality than the ssttaannddaarrdd mode.

       For CBR 320kbps (highest quality possible from the ----pprreesseett switches):

       ----pprreesseett iinnssaannee
              This preset will usually be overkill for most people and most  situations,  but  if  you
              must  have  the  absolute highest quality with no regard to filesize, this is the way to
              go.

       For ABR modes (high quality per given bitrate but not as high as VBR):

       ----pprreesseett  kkbbppss
              Using this preset will usually give you good quality at a specified bitrate.   Depending
              on the bitrate entered, this preset will determine the optimal settings for that partic‐
              ular situation.  While this approach works, it is not nearly as  flexible  as  VBR,  and
              usually will not attain the same level of quality as VBR at higher bitrates.

       ccbbrr    If  you  use  the  ABR mode (read above) with a significant bitrate such as 80, 96, 112,
              128, 160, 192, 224, 256, 320, you can use the ----pprreesseett ccbbrr  kkbbppss  option  to  force  CBR
              mode encoding instead of the standard ABR mode.  ABR does provide higher quality but CBR
              may be useful in situations such as when streaming an MP3 over the Internet may  be  im‐
              portant.

EEXXAAMMPPLLEESS
       Fixed bit rate jstereo 128kbs encoding:

              llaammee --bb _1_2_8 _s_a_m_p_l_e_._w_a_v _s_a_m_p_l_e_._m_p_3

       Fixed bit rate jstereo 128 kbps encoding, highest quality:

              llaammee --qq 00 --bb _1_2_8 _s_a_m_p_l_e_._w_a_v _s_a_m_p_l_e_._m_p_3

       To disable joint stereo encoding (slightly faster, but less quality at bitrates <= 128 kbps):

              llaammee --mm _s _s_a_m_p_l_e_._w_a_v _s_a_m_p_l_e_._m_p_3

       Variable bitrate (use -V n to adjust quality/filesize):

              llaammee --VV _2 _s_a_m_p_l_e_._w_a_v _s_a_m_p_l_e_._m_p_3

       Streaming mono 22.05 kHz raw pcm, 24 kbps output:

              ccaatt _i_n_p_u_t_f_i_l_e || llaammee --rr --mm _m --bb _2_4 --ss _2_2_._0_5 _- _- >> _o_u_t_p_u_t

       Streaming mono 44.1 kHz raw pcm, with downsampling to 22.05 kHz:

              ccaatt _i_n_p_u_t_f_i_l_e || llaammee --rr --mm _m --bb _2_4 ----rreessaammppllee _2_2_._0_5 _- _- >> _o_u_t_p_u_t

       Encode with the ssttaannddaarrdd preset:

              llaammee ----pprreesseett ssttaannddaarrdd _s_a_m_p_l_e_._w_a_v _s_a_m_p_l_e_._m_p_3

BBUUGGSS
       Probably there are some.

SSEEEE AALLSSOO
       mmppgg112233(1),, mmaaddppllaayy(1),, ssooxx(1)

AAUUTTHHOORRSS
       LAME originally developed by Mike Cheng and now maintained by
       Mark Taylor, and the LAME team.

       GPSYCHO psycho-acoustic model by Mark Taylor.
       (See http://www.mp3dev.org/).

       mpglib by Michael Hipp

       Manual page by William Schelter, Nils Faerber, Alexander Leidinger,
       and Rogério Brito.

LAME 3.99                                  December 08, 2013                                   lame(1)
